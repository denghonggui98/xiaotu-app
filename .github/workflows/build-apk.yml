name: Build APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer cython

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential git python3 python3-dev ffmpeg libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev

    - name: Build APK (let buildozer handle everything)
      run: |
        # 让buildozer完全自主处理Android SDK/NDK的下载和配置
        # 不预先设置任何Android环境，避免路径冲突
        buildozer android debug
```

```yaml
<<<<<<< SEARCH
    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: xiaotu-app-apk
        path: |
          bin/*.apk
          *.apk
    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: xiaotu-app-apk
        path: bin/*.apk

    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: xiaotu-app-apk
        path: |
          bin/*.apk
          *.apk

    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        artifacts: bin/*.apk