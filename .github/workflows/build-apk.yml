name: Build APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer cython

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential git python3 python3-dev ffmpeg libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev

    - name: Set up Android environment
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r25b
        add-to-path: true

    - name: Accept Android SDK licenses
      run: |
        mkdir -p $HOME/.buildozer/android/platform/android-sdk/licenses
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-license
        echo "84831b9409646a918e30573bab4c9c91346d8abd" > $HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-preview-license
    - name: Initialize Buildozer
      run: |
        buildozer android debug || true

    - name: Build APK
      run: |
        echo "开始构建APK..."
        buildozer android debug
      env:
        ANDROID_SDK_ROOT: /home/runner/.buildozer/android/platform/android-sdk
        ANDROID_HOME: /home/runner/.buildozer/android/platform/android-sdk

    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: xiaotu-app-apk
        path: bin/*.apk

    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        artifacts: bin/*.apk