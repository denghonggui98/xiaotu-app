name: Build APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Check files
      run: |
        echo "当前目录: $(pwd)"
        echo "目录内容:"
        ls -la
        echo "检查buildozer.spec是否存在:"
        if [ -f "buildozer.spec" ]; then
          echo "buildozer.spec 文件存在"
          echo "文件内容前10行:"
          head -10 buildozer.spec
        else
          echo "错误: buildozer.spec 文件不存在"
        fi

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer cython

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential git python3 python3-dev ffmpeg libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev

    - name: Setup Android SDK
      run: |
        echo "Setting up Android environment"
        # buildozer will automatically download and setup Android SDK/NDK

    - name: Build APK
      run: |
        echo "构建前检查目录结构:"
        ls -la
        buildozer android debug
      env:
        ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: xiaotu-app-apk
        path: bin/*.apk

    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        artifacts: bin/*.apk