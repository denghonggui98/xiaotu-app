name: Build APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer cython

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential git python3 python3-dev ffmpeg libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev


    - name: Set up Android SDK environment
      run: |
        # 创建Android SDK目录结构
        mkdir -p /home/runner/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin
        mkdir -p /home/runner/.buildozer/android/platform/android-sdk/licenses
        
        # 添加Android SDK许可证（自动接受）
        echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > /home/runner/.buildozer/android/platform/android-sdk/licenses/android-sdk-license
        echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > /home/runner/.buildozer/android/platform/android-sdk/licenses/android-sdk-preview-license
        
        # 验证许可证文件已创建
        echo "已创建的许可证文件:"
        ls -la /home/runner/.buildozer/android/platform/android-sdk/licenses/

    - name: Fix SDK Manager Path
      run: |
        # 创建符号链接以解决SDK路径问题
        SDK_ROOT="/home/runner/.buildozer/android/platform/android-sdk"
        
        # 如果tools目录不存在，创建它并建立符号链接
        if [ ! -d "$SDK_ROOT/tools" ]; then
          echo "创建tools目录和符号链接"
          mkdir -p "$SDK_ROOT/tools"
        fi
        
        # 检查cmdline-tools中是否有sdkmanager
        if [ -f "$SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" ]; then
          echo "创建sdkmanager符号链接"
          ln -sf "$SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "$SDK_ROOT/tools/bin/sdkmanager" 2>/dev/null || echo "无法创建符号链接"
        fi
        
        # 检查目录结构
        echo "Android SDK目录结构:"
        ls -la "$SDK_ROOT/"
        echo ""
        
        if [ -d "$SDK_ROOT/cmdline-tools/latest/bin" ]; then
          echo "cmdline-tools目录内容:"
          ls -la "$SDK_ROOT/cmdline-tools/latest/bin/"
        fi

    - name: Build APK
      run: |
        echo "开始构建APK..."
        buildozer android debug
      env:
        ANDROID_SDK_ROOT: /home/runner/.buildozer/android/platform/android-sdk
        ANDROID_HOME: /home/runner/.buildozer/android/platform/android-sdk

    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: xiaotu-app-apk
        path: bin/*.apk
    
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        artifacts: bin/*.apk